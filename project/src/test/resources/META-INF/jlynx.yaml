# 
# jlynx YAML configuration file for v1.5.1+
#
# place this file in the classpath in META-INF
# for webapps: WEB-INF/classes/META-INF/jlynx.yaml
# for Maven users: src/main/resources/META-INF/jlynx.yaml
#
# ***or***
#
# use System property 'jlynx.yaml.file' to point to a file system resource (v1.6.3+)
#
--- !jlynx/^config

# added in v1.7
# see Java Logging API for valid levels  
java-logging-level: fine

#
# define connections here
# a 'default' connection is REQ'D
#
connections:
    - name:         default
      driver:       org.hsqldb.jdbcDriver
      url:          jdbc:hsqldb:mem:/jlynxdb
      #uid:          sa
      #passwd:       hsql@pass
      
    - name:         derbyConnection
      driver:       org.apache.derby.jdbc.EmbeddedDriver
      url:          jdbc:derby:target/jlynxdb;create=true
    
    - name:         test
      datasource:   jdbc/testdatabase


# date formats for conversion
date-pattern:        MM/dd/yyyy
timestamp-pattern:   MM/dd/yyyy hh:mm:ss


#
# this is for class-entity mappings
# by default the entity name resolves to the class name (SimpleName)
#
class-entity-mappings:
    - test.PersonBean:      PERSON
    - test.Company:         COMPANY

#
# when database column and POJO field names differ
#
column-mappings:
    - test.Person.dateOfBirth:          dob
    - test.Person.modified:             modtime
    - test.Person.surName:              LastName
    - test.Person.personId:	        PersonID
    - test.Company.id:                  CompanyID
    - test.Company.name:                CompanyName

#
# place SQL statements here
# for this file there are 3 named queries i.e., 'ddl', 'selectAll', 'selectSome'
# you can use these for jlynx's list fetching methods
#
named-queries:
    - ddl_DERBY: >

    CREATE TABLE person (
        personID integer primary key,
        lastname varchar(40),
        dob date,
        modtime timestamp,
        image blob,
        resume clob
    )
    
    - ddl_HSQL: >

    CREATE TABLE person (
      personID int primary key,
      lastname varchar(40),
      dob date,
      modtime timestamp,
      image binary,
      resume longvarchar)
    CREATE TABLE company (
      companyID int primary key,
      companyName varchar(40))
    CREATE TABLE personcompany (
      personID int, companyID int,
      primary key (personID, companyID)) 
    
    - selectSome: >

    SELECT * FROM person
    WHERE personID BETWEEN ? AND ?
    
    - selectAll:        SELECT * FROM person
